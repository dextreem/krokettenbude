/* tslint:disable */
/* eslint-disable */
/**
 * Croqueteria - API Documentation
 * Endpoints for Croqueteria API, a service that allows to describe, rate and discuss the most delicious croquettes around the globe.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CroquetteRecommendationRequest
 */
export interface CroquetteRecommendationRequest {
    /**
     * 
     * @type {number}
     * @memberof CroquetteRecommendationRequest
     */
    preferredSpiciness: number;
    /**
     * 
     * @type {number}
     * @memberof CroquetteRecommendationRequest
     */
    preferredCrunchiness: number;
    /**
     * 
     * @type {boolean}
     * @memberof CroquetteRecommendationRequest
     */
    vegan: boolean;
    /**
     * 
     * @type {string}
     * @memberof CroquetteRecommendationRequest
     */
    form: CroquetteRecommendationRequestFormEnum;
}


/**
 * @export
 */
export const CroquetteRecommendationRequestFormEnum = {
    Cylindric: 'CYLINDRIC',
    Oval: 'OVAL',
    Ball: 'BALL',
    Disk: 'DISK',
    Other: 'OTHER'
} as const;
export type CroquetteRecommendationRequestFormEnum = typeof CroquetteRecommendationRequestFormEnum[keyof typeof CroquetteRecommendationRequestFormEnum];


/**
 * Check if a given object implements the CroquetteRecommendationRequest interface.
 */
export function instanceOfCroquetteRecommendationRequest(value: object): value is CroquetteRecommendationRequest {
    if (!('preferredSpiciness' in value) || value['preferredSpiciness'] === undefined) return false;
    if (!('preferredCrunchiness' in value) || value['preferredCrunchiness'] === undefined) return false;
    if (!('vegan' in value) || value['vegan'] === undefined) return false;
    if (!('form' in value) || value['form'] === undefined) return false;
    return true;
}

export function CroquetteRecommendationRequestFromJSON(json: any): CroquetteRecommendationRequest {
    return CroquetteRecommendationRequestFromJSONTyped(json, false);
}

export function CroquetteRecommendationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CroquetteRecommendationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'preferredSpiciness': json['preferredSpiciness'],
        'preferredCrunchiness': json['preferredCrunchiness'],
        'vegan': json['vegan'],
        'form': json['form'],
    };
}

export function CroquetteRecommendationRequestToJSON(json: any): CroquetteRecommendationRequest {
    return CroquetteRecommendationRequestToJSONTyped(json, false);
}

export function CroquetteRecommendationRequestToJSONTyped(value?: CroquetteRecommendationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'preferredSpiciness': value['preferredSpiciness'],
        'preferredCrunchiness': value['preferredCrunchiness'],
        'vegan': value['vegan'],
        'form': value['form'],
    };
}

