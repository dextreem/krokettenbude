/* tslint:disable */
/* eslint-disable */
/**
 * Croqueteria - API Documentation
 * Endpoints for Croqueteria API, a service that allows to describe, rate and discuss the most delicious croquettes around the globe.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CroquetteUpdateRequest
 */
export interface CroquetteUpdateRequest {
    /**
     * 
     * @type {string}
     * @memberof CroquetteUpdateRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof CroquetteUpdateRequest
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof CroquetteUpdateRequest
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof CroquetteUpdateRequest
     */
    crunchiness?: number;
    /**
     * 
     * @type {number}
     * @memberof CroquetteUpdateRequest
     */
    spiciness?: number;
    /**
     * 
     * @type {boolean}
     * @memberof CroquetteUpdateRequest
     */
    vegan?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CroquetteUpdateRequest
     */
    form?: CroquetteUpdateRequestFormEnum;
    /**
     * 
     * @type {string}
     * @memberof CroquetteUpdateRequest
     */
    imageUrl?: string;
}


/**
 * @export
 */
export const CroquetteUpdateRequestFormEnum = {
    Cylindric: 'CYLINDRIC',
    Oval: 'OVAL',
    Ball: 'BALL',
    Disk: 'DISK',
    Other: 'OTHER'
} as const;
export type CroquetteUpdateRequestFormEnum = typeof CroquetteUpdateRequestFormEnum[keyof typeof CroquetteUpdateRequestFormEnum];


/**
 * Check if a given object implements the CroquetteUpdateRequest interface.
 */
export function instanceOfCroquetteUpdateRequest(value: object): value is CroquetteUpdateRequest {
    return true;
}

export function CroquetteUpdateRequestFromJSON(json: any): CroquetteUpdateRequest {
    return CroquetteUpdateRequestFromJSONTyped(json, false);
}

export function CroquetteUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CroquetteUpdateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'country': json['country'] == null ? undefined : json['country'],
        'description': json['description'] == null ? undefined : json['description'],
        'crunchiness': json['crunchiness'] == null ? undefined : json['crunchiness'],
        'spiciness': json['spiciness'] == null ? undefined : json['spiciness'],
        'vegan': json['vegan'] == null ? undefined : json['vegan'],
        'form': json['form'] == null ? undefined : json['form'],
        'imageUrl': json['imageUrl'] == null ? undefined : json['imageUrl'],
    };
}

export function CroquetteUpdateRequestToJSON(json: any): CroquetteUpdateRequest {
    return CroquetteUpdateRequestToJSONTyped(json, false);
}

export function CroquetteUpdateRequestToJSONTyped(value?: CroquetteUpdateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'country': value['country'],
        'description': value['description'],
        'crunchiness': value['crunchiness'],
        'spiciness': value['spiciness'],
        'vegan': value['vegan'],
        'form': value['form'],
        'imageUrl': value['imageUrl'],
    };
}

