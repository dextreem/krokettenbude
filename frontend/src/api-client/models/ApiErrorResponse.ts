/* tslint:disable */
/* eslint-disable */
/**
 * Croqueteria - API Documentation
 * Endpoints for Croqueteria API, a service that allows to describe, rate and discuss the most delicious croquettes around the globe.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiErrorResponse
 */
export interface ApiErrorResponse {
    /**
     * Timestamp of the error response
     * @type {Date}
     * @memberof ApiErrorResponse
     */
    timestamp: Date;
    /**
     * HTTP status code
     * @type {number}
     * @memberof ApiErrorResponse
     */
    status: number;
    /**
     * Error reason phrase
     * @type {string}
     * @memberof ApiErrorResponse
     */
    error: string;
    /**
     * Detailed error message
     * @type {string}
     * @memberof ApiErrorResponse
     */
    message?: string;
    /**
     * Request path where the error occurred
     * @type {string}
     * @memberof ApiErrorResponse
     */
    path?: string;
}

/**
 * Check if a given object implements the ApiErrorResponse interface.
 */
export function instanceOfApiErrorResponse(value: object): value is ApiErrorResponse {
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('error' in value) || value['error'] === undefined) return false;
    return true;
}

export function ApiErrorResponseFromJSON(json: any): ApiErrorResponse {
    return ApiErrorResponseFromJSONTyped(json, false);
}

export function ApiErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiErrorResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'timestamp': (new Date(json['timestamp'])),
        'status': json['status'],
        'error': json['error'],
        'message': json['message'] == null ? undefined : json['message'],
        'path': json['path'] == null ? undefined : json['path'],
    };
}

export function ApiErrorResponseToJSON(json: any): ApiErrorResponse {
    return ApiErrorResponseToJSONTyped(json, false);
}

export function ApiErrorResponseToJSONTyped(value?: ApiErrorResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timestamp': ((value['timestamp']).toISOString()),
        'status': value['status'],
        'error': value['error'],
        'message': value['message'],
        'path': value['path'],
    };
}

