/* tslint:disable */
/* eslint-disable */
/**
 * Croqueteria - API Documentation
 * Endpoints for Croqueteria API, a service that allows to describe, rate and discuss the most delicious croquettes around the globe.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommentResponse
 */
export interface CommentResponse {
    /**
     * 
     * @type {number}
     * @memberof CommentResponse
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof CommentResponse
     */
    croquetteId?: number;
    /**
     * 
     * @type {number}
     * @memberof CommentResponse
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof CommentResponse
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof CommentResponse
     */
    comment: string;
    /**
     * 
     * @type {Date}
     * @memberof CommentResponse
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the CommentResponse interface.
 */
export function instanceOfCommentResponse(value: object): value is CommentResponse {
    if (!('comment' in value) || value['comment'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function CommentResponseFromJSON(json: any): CommentResponse {
    return CommentResponseFromJSONTyped(json, false);
}

export function CommentResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'croquetteId': json['croquetteId'] == null ? undefined : json['croquetteId'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'comment': json['comment'],
        'createdAt': (new Date(json['createdAt'])),
    };
}

export function CommentResponseToJSON(json: any): CommentResponse {
    return CommentResponseToJSONTyped(json, false);
}

export function CommentResponseToJSONTyped(value?: CommentResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'croquetteId': value['croquetteId'],
        'userId': value['userId'],
        'userName': value['userName'],
        'comment': value['comment'],
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

