/* tslint:disable */
/* eslint-disable */
/**
 * Croqueteria - API Documentation
 * Endpoints for Croqueteria API, a service that allows to describe, rate and discuss the most delicious croquettes around the globe.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CroquetteCreateRequest
 */
export interface CroquetteCreateRequest {
    /**
     * 
     * @type {string}
     * @memberof CroquetteCreateRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CroquetteCreateRequest
     */
    country: string;
    /**
     * 
     * @type {string}
     * @memberof CroquetteCreateRequest
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof CroquetteCreateRequest
     */
    crunchiness: number;
    /**
     * 
     * @type {number}
     * @memberof CroquetteCreateRequest
     */
    spiciness: number;
    /**
     * 
     * @type {boolean}
     * @memberof CroquetteCreateRequest
     */
    vegan: boolean;
    /**
     * 
     * @type {string}
     * @memberof CroquetteCreateRequest
     */
    form: CroquetteCreateRequestFormEnum;
    /**
     * 
     * @type {string}
     * @memberof CroquetteCreateRequest
     */
    imageUrl: string;
}


/**
 * @export
 */
export const CroquetteCreateRequestFormEnum = {
    Cylindric: 'CYLINDRIC',
    Oval: 'OVAL',
    Ball: 'BALL',
    Disk: 'DISK',
    Other: 'OTHER'
} as const;
export type CroquetteCreateRequestFormEnum = typeof CroquetteCreateRequestFormEnum[keyof typeof CroquetteCreateRequestFormEnum];


/**
 * Check if a given object implements the CroquetteCreateRequest interface.
 */
export function instanceOfCroquetteCreateRequest(value: object): value is CroquetteCreateRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('crunchiness' in value) || value['crunchiness'] === undefined) return false;
    if (!('spiciness' in value) || value['spiciness'] === undefined) return false;
    if (!('vegan' in value) || value['vegan'] === undefined) return false;
    if (!('form' in value) || value['form'] === undefined) return false;
    if (!('imageUrl' in value) || value['imageUrl'] === undefined) return false;
    return true;
}

export function CroquetteCreateRequestFromJSON(json: any): CroquetteCreateRequest {
    return CroquetteCreateRequestFromJSONTyped(json, false);
}

export function CroquetteCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CroquetteCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'country': json['country'],
        'description': json['description'],
        'crunchiness': json['crunchiness'],
        'spiciness': json['spiciness'],
        'vegan': json['vegan'],
        'form': json['form'],
        'imageUrl': json['imageUrl'],
    };
}

export function CroquetteCreateRequestToJSON(json: any): CroquetteCreateRequest {
    return CroquetteCreateRequestToJSONTyped(json, false);
}

export function CroquetteCreateRequestToJSONTyped(value?: CroquetteCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'country': value['country'],
        'description': value['description'],
        'crunchiness': value['crunchiness'],
        'spiciness': value['spiciness'],
        'vegan': value['vegan'],
        'form': value['form'],
        'imageUrl': value['imageUrl'],
    };
}

